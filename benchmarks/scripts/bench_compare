#!/usr/bin/env bash

# Compare Gene performance with other languages
# Usage: bench_compare [n]

N=${1:-24}

echo "=== Performance Comparison for fib($N) ==="
echo ""

# Gene
if [ -f bin/gene ]; then
  echo "Gene:"
  TIME=$( { time -p ./bin/gene -c "(fn fib n (if (n < 2) n else ((fib (n - 1)) + (fib (n - 2))))) (fib $N)" 2>&1; } 2>&1 | grep real | awk '{print $2}')
  echo "  Time: $TIME seconds"
fi

# Ruby
if command -v ruby &> /dev/null; then
  echo ""
  echo "Ruby:"
  TIME=$( { time -p ruby -e "def fib(n); n < 2 ? n : fib(n-1) + fib(n-2); end; puts fib($N)" 2>&1; } 2>&1 | grep real | awk '{print $2}')
  echo "  Time: $TIME seconds"
fi

# Python
if command -v python3 &> /dev/null; then
  echo ""
  echo "Python:"
  TIME=$( { time -p python3 -c "def fib(n): return n if n < 2 else fib(n-1) + fib(n-2); print(fib($N))" 2>&1; } 2>&1 | grep real | awk '{print $2}')
  echo "  Time: $TIME seconds"
fi

# Node.js
if command -v node &> /dev/null; then
  echo ""
  echo "Node.js:"
  TIME=$( { time -p node -e "function fib(n) { return n < 2 ? n : fib(n-1) + fib(n-2); } console.log(fib($N));" 2>&1; } 2>&1 | grep real | awk '{print $2}')
  echo "  Time: $TIME seconds"
fi

echo ""
echo "Note: Lower time is better. This is a recursive fibonacci benchmark."