#!/usr/bin/env gene run

# Simple async example without sleep functions
# This demonstrates the basic async/await functionality

(println "=== Simple Async Example ===")

# Test 1: Basic async/await
(println "Test 1: Basic async/await")
(var result1 (await (async 42)))
(println "Result 1:" result1)
(println)

# Test 2: Async with computation
(println "Test 2: Async with computation")
(var result2 (await (async (+ 10 20))))
(println "Result 2:" result2)
(println)

# Test 3: Async function
(println "Test 3: Async function")
(fn async_add [a b]
  (async (+ a b))
)

(var result3 (await (async_add 5 7)))
(println "Result 3:" result3)
(println)

# Test 4: Multiple async operations
(println "Test 4: Multiple async operations")
(var future1 (async (* 2 3)))
(var future2 (async (* 4 5)))

(var result4a (await future1))
(var result4b (await future2))
(println "Result 4a:" result4a)
(println "Result 4b:" result4b)
(println)

# Test 5: Async with error handling
(println "Test 5: Async with error handling")
(try
  (var result5 (await (async (throw "test error"))))
  (println "This should not be reached")
catch *
  (println "Caught error:" $ex)
)
(println)

(println "=== All async tests completed successfully! ===")
