#!/usr/bin/env gene run

# Comprehensive HTTP Examples for Gene
# =====================================
# This file demonstrates various HTTP capabilities in Gene

(println "=== Gene HTTP Examples ===\n")

# Example 1: Simple GET request using helper function
(println "Example 1: Simple GET request")
(println "-" "-" "-" "-" "-")
(var future1 (http_get "http://httpbin.org/get"))
(var response1 (await future1))
(println "Status:" response1/status)
(println "Body preview:" ((response1/body) 0 100) "...\n")

# Example 2: GET with Request class
(println "Example 2: GET with Request class")
(println "-" "-" "-" "-" "-")
(var req2 (new gene/Request "http://httpbin.org/user-agent"))
(println "Request created")
# Note: Request.send method requires implementation fixes
# (var response2 (await ((req2/.send))))

# Example 3: POST request with JSON body
(println "\nExample 3: POST with JSON body")
(println "-" "-" "-" "-" "-")
(var data {
  ^name "Gene Language"
  ^version "1.0"
})
(var future3 (http_post "http://httpbin.org/post" data))
(var response3 (await future3))
(println "Status:" response3/status)
(println "Response received\n")

# Example 4: Mock Response object
(println "Example 4: Creating Response objects")
(println "-" "-" "-" "-" "-")
(var mock_response (new gene/Response 200 "OK"))
(println "Mock response created with status:" mock_response/status)
(println "Mock response body:" mock_response/body "\n")

# Example 5: Multiple parallel requests (if needed)
(println "Example 5: Parallel requests")
(println "-" "-" "-" "-" "-")
(var f1 (http_get "http://httpbin.org/uuid"))
(var f2 (http_get "http://httpbin.org/uuid"))
(var r1 (await f1))
(var r2 (await f2))
(println "Request 1 status:" r1/status)
(println "Request 2 status:" r2/status)

(println "\n=== Examples Complete ===")