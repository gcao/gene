#!/usr/bin/env gene

# AI/ML Demo - Gene's AI Capabilities
# Demonstrates tensor operations, model management, and inference

(println "=== Gene AI/ML Demo ===")
(println)

# 1. Tensor Operations
(println "1. Tensor Operations:")
(println "-------------------")

# Create various tensors
(var weights (tensor/random [784 128]))
(println "  Weight matrix:" weights)

(var bias (tensor/zeros [128]))
(println "  Bias vector:" bias)

(var input_data (tensor/create [32 784] :float32))
(println "  Input batch:" input_data)

# Perform operations
(var output (tensor/add (tensor/matmul input_data weights) bias))
(println "  Linear layer output:" output)

(println)

# 2. Model Components
(println "2. Model Components:")
(println "-------------------")

# Initialize AI components
(var tokenizer_obj (tokenizer/create 30000))
(println "  Tokenizer (vocab=30k):" tokenizer_obj)

(var embeddings (embedding/create 512))
(println "  Embeddings (dim=512):" embeddings)

(var model_obj (model/create "gene_bert" "transformer"))
(println "  Model:" model_obj)

(var device_obj (device/create "cpu"))
(println "  Device:" device_obj)

(println)

# 3. Simple Neural Network Layer
(println "3. Neural Network Layer:")
(println "-----------------------")

(fn linear_layer [input weight bias]
  # Compute: output = input @ weight + bias
  (tensor/add (tensor/matmul input weight) bias))

(fn relu [x]
  # ReLU activation (simplified - returns input for now)
  x)

# Create layer parameters
(var w1 (tensor/random [100 50]))
(var b1 (tensor/zeros [50]))
(var x (tensor/random [10 100]))

# Forward pass
(var hidden (linear_layer x w1 b1))
(var activated (relu hidden))
(println "  Layer output shape:" (tensor/shape activated))

(println)

# 4. Data Pipeline
(println "4. Data Pipeline:")
(println "----------------")

# Simulate batch processing
(fn process_batch [batch_size seq_len hidden_dim]
  (var batch (tensor/create [batch_size seq_len hidden_dim] :float32))
  (println "  Processing batch:" batch)
  batch)

(var batch_result (process_batch 16 128 768))

(println)
(println "=== Demo Complete ===")
(println "Gene provides powerful AI/ML capabilities through")
(println "native tensor operations and model management APIs.")
true