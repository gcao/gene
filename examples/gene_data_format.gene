#<
  Gene Language Syntax Demo
  This document demonstrates all major syntax features of Gene
>#

# Basic Types
# -----------

# Nil, Booleans
nil     # The nil value
true    # Boolean true
false   # Boolean false

# Numbers
10      # Integer
-1      # Negative integer
10e10   # Scientific notation
+5.0E5  # Scientific with explicit plus
1/2     # Ratio number

# Characters (with escapes)
\s      # Space character
\space  # Also space
\t      # Tab character
\tab    # Also tab
\n      # Newline
\newline # Also newline
\ä¸­     # Unicode character

# Strings
"hello world"     # Double-quoted string
'hello world'     # Single-quoted string
"""
  Multi-line
  string
"""               # Triple-quoted string

# Symbols
a                 # Simple symbol
A                 # Case-sensitive
/                 # Special character symbol
+a                # Starts with special char
#a                # Starts with hash
a#b               # Contains hash
a:b               # Contains colon
a\ b              # Contains space (escaped)
a\/b              # Contains forward slash (escaped)

# Complex Symbols (with namespaces)
n/A               # Namespaced symbol
n/m/A             # Multiple namespace levels
n\/A/B            # Escaped namespace separator
/A                # Root namespace

# Collections
# -----------

# Arrays
[]                # Empty array
[1 2 3]           # Space-separated elements
[1, 2, 3]         # Comma-separated elements

# Sets
#[]               # Empty set
#[1 2 3]          # Set with elements

# Maps
{}                # Empty map
{^a 1}            # Map with one entry
{^a^b 1}          # Nested property
{^a^^b}           # Property with true value
{^a^!b}           # Property with false value
{
  ^name "test"    # Multi-line map
  ^value 123
}

# Gene Expressions
# ---------------

# Basic Gene
(type child1 child2)  # Simple gene with children

# Gene with properties
(type ^prop1 val1 ^prop2 val2 
  child1 
  child2)           # Gene with properties and children

# Gene with property shorthand forms
(type
  ^^prop1
  ^!prop2
  ^prop3^x 1
  ^prop4^^y
)

# Quotes and Unquotes
:symbol             # Quote a symbol
%expr               # Unquote an expression
%_expr              # Unquote and discard result

# Regular Expressions
#/pattern/          # Basic regex
#/pattern/i         # Regex with ignore-case flag
#/a\/b/             # Regex with escaped forward slash

# Dates and Times
2024-03-14          # Date
2024-03-14T15:30:00Z # DateTime
15:30:00            # Time

# Binary Data
0!11110000          # Binary number
0*FF                # Hexadecimal
0#BASE64            # Base64 encoded

# Decorators
#@decorator expr    # Apply decorator to expression
(decorator expr)    # Decorator is just a syntax sugar

# References
(#Ref "x" 123)      # Define reference
#&x                 # Use reference

# Line comment

#<
  Block comment
  Can span multiple lines
>#

#< 
  Nested block comment
  #<< Can contain other comments >>#
>#

#< 
  End of syntax demo
>#
