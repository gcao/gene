# Small GIR benchmark (~2KB)
# Tests basic initialization overhead

(print "Small GIR Benchmark Starting...")

# Variable declarations
(var counter 0)
(var multiplier 10)
(var result 0)

# Some basic arithmetic
(var a 100)
(var b 200)
(var c (+ a b))
(var d (* c 2))
(var e (- d 100))

# Arrays
(var numbers [1 2 3 4 5 6 7 8 9 10])
(var doubles [2 4 6 8 10 12 14 16 18 20])
(var triples [3 6 9 12 15 18 21 24 27 30])

# String variables
(var str1 "The quick brown fox jumps over the lazy dog")
(var str2 "Pack my box with five dozen liquor jugs")
(var str3 "How vexingly quick daft zebras jump")
(var str4 "Sphinx of black quartz, judge my vow")

# More calculations
(var sum1 (+ 10 20 30 40 50))
(var sum2 (+ 15 25 35 45 55))
(var sum3 (+ sum1 sum2))
(var product1 (* 2 3 4 5))
(var product2 (* 3 4 5 6))
(var product3 (* product1 product2))

# Complex expressions
(var expr1 (+ (* 2 3) (* 4 5) (* 6 7)))
(var expr2 (- (* 10 10) (* 5 5) (* 3 3)))
(var expr3 (+ expr1 expr2))
(var expr4 (* expr3 2))
(var expr5 (+ expr4 100))

# Additional variables to reach ~2KB
(var v1 1) (var v2 2) (var v3 3) (var v4 4) (var v5 5)
(var v6 6) (var v7 7) (var v8 8) (var v9 9) (var v10 10)
(var v11 11) (var v12 12) (var v13 13) (var v14 14) (var v15 15)
(var v16 16) (var v17 17) (var v18 18) (var v19 19) (var v20 20)

(var r1 (+ v1 v2 v3 v4 v5))
(var r2 (+ v6 v7 v8 v9 v10))
(var r3 (+ v11 v12 v13 v14 v15))
(var r4 (+ v16 v17 v18 v19 v20))
(var total (+ r1 r2 r3 r4))

# More variables to reach 2KB
(var x21 21) (var x22 22) (var x23 23) (var x24 24) (var x25 25)
(var x26 26) (var x27 27) (var x28 28) (var x29 29) (var x30 30)
(var x31 31) (var x32 32) (var x33 33) (var x34 34) (var x35 35)
(var x36 36) (var x37 37) (var x38 38) (var x39 39) (var x40 40)

(var s1 (+ x21 x22 x23 x24 x25))
(var s2 (+ x26 x27 x28 x29 x30))
(var s3 (+ x31 x32 x33 x34 x35))
(var s4 (+ x36 x37 x38 x39 x40))
(var stotal (+ s1 s2 s3 s4))

# Even more to ensure 2KB
(var arr4 [41 42 43 44 45 46 47 48 49 50])
(var arr5 [51 52 53 54 55 56 57 58 59 60])
(var arr6 [61 62 63 64 65 66 67 68 69 70])

# Final output
(print "Calculations complete. Total: " total " STotal: " stotal)
(print "Small GIR Benchmark Complete")